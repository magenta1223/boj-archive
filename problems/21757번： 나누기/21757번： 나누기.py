#  **************************************************************************  #
#                                                                              #
#                                                       :::    :::    :::      #
#     Problem Number: 21757                            :+:    :+:      :+:     #
#                                                     +:+    +:+        +:+    #
#     By: magenta1223 <boj.kr/u/magenta1223>         +#+    +#+          +#+   #
#                                                   +#+      +#+        +#+    #
#     https://boj.kr/21757                         #+#        #+#      #+#     #
#     Solved: 2024-09-26 09:48:35 by magenta1223  ###          ###   ##.kr     #
#                                                                              #
#  **************************************************************************  #

def Sol(n, v):
    t = sum(v)
    if t % 4:
        return 0
    pSum = 0
    cnt = [0] * 4
    t //= 4
    cnt[0] = 1
    for i in range(n - 1):
        pSum += v[i] # 누적합 
        if pSum == 3 * t:
            # 구간 3개합 -> 남은구간도 합이 t
            # 구간 3개를 만드는 조합의 수 = 4개를 만드는 조합의 수를 업데이트
            # i번째 이전까지 구간 2개를 만드는 조합의 수 만큼 추가로 만들 수 있음. 
            cnt[3] += cnt[2]
        if pSum == 2 * t:
            # 마찬가지 
            cnt[2] += cnt[1]
        if pSum == 1 * t:
            # 마찬가지 
            cnt[1] += cnt[0]
    return cnt[3]

n, *v = map(int, open(0).read().split())
print(Sol(n, v))