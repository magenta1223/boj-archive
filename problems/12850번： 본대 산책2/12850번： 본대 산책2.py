#  **************************************************************************  #
#                                                                              #
#                                                       :::    :::    :::      #
#     Problem Number: 12850                            :+:    :+:      :+:     #
#                                                     +:+    +:+        +:+    #
#     By: magenta1223 <boj.kr/u/magenta1223>         +#+    +#+          +#+   #
#                                                   +#+      +#+        +#+    #
#     https://boj.kr/12850                         #+#        #+#      #+#     #
#     Solved: 2024-04-09 14:37:45 by magenta1223  ###          ###   ##.kr     #
#                                                                              #
#  **************************************************************************  #

D, MOD = int(input()), 1_000_000_007
 
E = [
    [1,0,0,0,0,0,0,0],
    [0,1,0,0,0,0,0,0],
    [0,0,1,0,0,0,0,0],
    [0,0,0,1,0,0,0,0],
    [0,0,0,0,1,0,0,0],
    [0,0,0,0,0,1,0,0],
    [0,0,0,0,0,0,1,0],
    [0,0,0,0,0,0,0,1],
]
 
ADJ = [
    [0,1,0,0,0,0,0,1],
    [1,0,1,0,0,0,0,1],
    [0,1,0,1,0,0,1,1],
    [0,0,1,0,1,0,1,0],
    [0,0,0,1,0,1,0,0],
    [0,0,0,0,1,0,1,0],
    [0,0,1,1,0,1,0,1],
    [1,1,1,0,0,0,1,0],
]
 
def matmul(a, b, n=8):
    b = [list(row) for row in zip(*b)]
    c = [[0] * n for _ in range(n)]
    for i in range(n):
        for j in range(n):
            c[i][j] = sum([a[i][k] * b[j][k] for k in range(n)]) % MOD
    return c
 
x, adjs = 1, [ADJ]
while x*2 <= D:
    adjs.append(matmul(adjs[-1], adjs[-1]))
    x *= 2
mat = E 
for i, bit in enumerate(bin(D)[2:][::-1]):
    if bit == "0":
        continue
    mat = matmul(mat, adjs[i])
print(mat[0][0])
 